{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./multi.pipe\";\nexport let ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {}\n\n  ChildComponent.ɵfac = function ChildComponent_Factory(t) {\n    return new (t || ChildComponent)();\n  };\n\n  ChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChildComponent,\n    selectors: [[\"app-child\"]],\n    inputs: {\n      childNum: \"childNum\",\n      childMultiplier: \"childMultiplier\"\n    },\n    decls: 10,\n    vars: 6,\n    template: function ChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" Multiply using MultiPipe inside child component\");\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"multi\");\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Num: \", ctx.childNum, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Multiplier: \", ctx.childMultiplier, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Result: \", i0.ɵɵpipeBind2(8, 3, ctx.childNum, ctx.childMultiplier), \"\");\n      }\n    },\n    dependencies: [i1.MultiPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}